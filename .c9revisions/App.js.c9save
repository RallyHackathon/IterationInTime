{"ts":1349292842667,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n    launch: function() {\n        //Write app code here\n    }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":146}]],"length":146}
{"contributors":["troper@rallydev.com"],"silentsave":false,"ts":1349293094943,"patch":[[{"diffs":[[0,"ne('"],[-1,"CustomApp"],[1,"ScopeChange"],[0,"', {"]],"start1":8,"start2":8,"length1":17,"length2":19},{"diffs":[[0,"    "],[-1,"componentCls: 'app',\n\n    launch: function() {\n        //Write app code here"],[1,"layout: { type: 'vbox', align: 'stretch' },\n    appName:'Story Board',\n    componentCls: 'app',\n\n    _filters:undefined,\n    _types:['User Story'],\n\n    items:[\n        {\n            xtype:'container',\n            itemId:'header',\n            cls:'header'\n        },\n        {\n            xtype:'container',\n            itemId:'bodyContainer',\n            height:'90%',\n            width:'100%',\n            autoScroll:true\n        }\n    ],\n\n    _setFilter:function(iteration) {\n        this._filters = [\n            {\n                property:'Iteration.Name',\n                value:iteration\n            }\n        ];\n        this._buildBoard();\n    },\n\n    _setTypes:function(box, checked) {\n        if(this._types.indexOf(box.inputValue) >= 0 && !checked) {\n            this._types.splice(this._types.indexOf(box.inputValue), 1);\n        } else if((this._types.indexOf(box.inputValue) < 0) && checked) {\n            this._types.push(box.inputValue);\n        }\n        this._buildBoard();\n    },\n\n    _buildBoard:function() {\n        if(this._filters === undefined) {\n            return;\n        }\n        this.setLoading();\n        if(this._cardBoard !== undefined) {\n            this.down('#bodyContainer').remove(this._cardBoard);\n        }\n        this._cardBoard = Ext.widget('rallycardboard', {\n            types: this._types,\n            itemId:'cardboard',\n            name: 'cardboard',\n            attribute:'ScheduleState',\n            listeners: {\n                    load: function(board, eOpts) {\n                        this.setLoading(false);\n                    },\n                    scope: this\n            },\n            storeConfig:{\n                filters: this._filters\n            }\n        });\n        //this.setLoading(false);\n        this.down('#bodyContainer').add(this._cardBoard);\n    },\n\n    // addition of the help component is an afterthought...no support for it built into the SDK atm that I see, so this is a quick and dirty for now.\n    _buildHelpComponent:function (config) {\n        var host = this.context.getWorkspace()._ref.substr(0, this.context.getWorkspace()._ref.indexOf(\"/slm/\"));\n        return Ext.create('Ext.Component', Ext.apply({\n            renderTpl:'<a href=\"http://www.rallydev.com/help/story-board?basehost='+host+'\" title=\"Launch Help for Story Board App\" target=\"_blank\" ' +\n                'class=\"help\"><img id=\"appHeaderrighthelp\" class=\"appHelp\" src=\"'+host+'/apps/2.0p3/rui/resources/themes/images/default/help/icon_help.png\" title=\"Launch Help\" alt=\"Launch Help\" style=\"\"></a>'\n        }, config));\n    },\n\n    /**\n* @override\n*/\n    launch:function () {\n        this.insert(0,this._buildHelpComponent({}));\n        this.down('#header').add([\n            {\n                xtype: 'rallyaddnew',\n                recordTypes: ['User Story', 'Defect', 'Defect Suite'],\n                cls:'add-new',\n                ignoredRequiredFields: ['Name'],\n                listeners: {\n                    recordadd: function(addNew, result) {\n                        this.down('#cardboard').addCard(result.record);\n                    },\n                    beforerecordadd: function(addNew, result) {\n                        result.record.set(\"Iteration\", this.down('#iterationcombobox').getValue());\n                    },\n                    scope: this\n                }\n            },\n            {\n                xtype : 'fieldcontainer',\n                fieldLabel : 'Show',\n                defaultType: 'checkboxfield',\n                layout: 'hbox',\n                cls:'checkbox',\n                labelWidth: 40,\n                width: 300,\n                labelAlign: 'right',\n                items: [\n                    {\n                        boxLabel : 'User Stories',\n                        inputValue: 'User Story',\n                        checked : true,\n                        width: 78,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }, {\n                        boxLabel : 'Defects',\n                        inputValue: 'Defect',\n                        padding: \"0 10\",\n                        width: 56,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }, {\n                        boxLabel : 'Defect Suites',\n                        inputValue: 'Defect Suite',\n                        padding: \"0 20\",\n                        width: 84,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }\n                ]\n            },\n            {\n                xtype : 'fieldcontainer',\n                fieldLabel : 'Iteration',\n                pack: 'end',\n                labelAlign: 'right',\n                cls: 'iteration-picker',\n                items: [\n                    {\n                        xtype:'rallyiterationcombobox',\n                        itemId:'iterationcombobox',\n                        width: 300,\n                        listeners:{\n                            change:function(combo) {\n                                this._setFilter(combo.getRawValue());\n                            },\n                            ready:function(combo) {\n                                this._setFilter(combo.getRawValue());\n                            },\n                            scope:this\n                        }\n                    }\n                ]\n            }\n        ]);"],[0,"\n   "]],"start1":57,"start2":57,"length1":84,"length2":6044}]],"length":6108,"saved":false}
{"ts":1349294245635,"patch":[[{"diffs":[[0,"pName:'S"],[-1,"tory Board"],[1,"copeChanges"],[0,"',\n    c"]],"start1":111,"start2":111,"length1":26,"length2":27},{"diffs":[[0,"r Story'"],[1,", 'Defect'"],[0,"],\n\n    "]],"start1":199,"start2":199,"length1":16,"length2":26},{"diffs":[[0,") {\n"],[-1,"        this._filters = [\n            {\n                property:'Iteration.Name',\n                value:iteration\n            }\n        ];\n        this._buildBoard();"],[0,"\n   "]],"start1":547,"start2":547,"length1":175,"length2":8},{"diffs":[[0,"nction () {\n"],[1,"    \n"],[0,"        this"]],"start1":2516,"start2":2516,"length1":24,"length2":29}]],"length":5957,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349294644719,"patch":[[{"diffs":[[0,"'app',\n\n"],[1,"//"],[0,"    _fil"]],"start1":151,"start2":151,"length1":16,"length2":18},{"diffs":[[0,"efined,\n"],[1,"//"],[0,"    _typ"]],"start1":177,"start2":177,"length1":16,"length2":18},{"diffs":[[0," ],\n"],[-1,"\n"],[0,"    "],[-1,"_setFilter:function(iteration) {\n\n    },\n\n    _setTypes:function(box, checked) {\n        if(this._types.indexOf(box.inputValue) >= 0 && !checked) {\n            this._types.splice(this._types.indexOf(box.inputValue), 1);\n        } else if((this._types.indexOf(box.inputValue) < 0) && checked) {\n            this._types.push(box.inputValue);\n        }\n        this._buildBoard();\n    },\n\n    _buildBoard:function() {\n        if(this._filters === undefined) {\n            return;\n        }\n        this.setLoading();\n        if(this._cardBoard !== undefined) {\n            this.down('#bodyContainer').remove(this._cardBoard);\n        }\n        this._cardBoard = Ext.widget('rallycardboard', {\n            types: this._types,\n            itemId:'cardboard',\n            name: 'cardboard',\n            attribute:'ScheduleState',\n            listeners: {\n                    load: function(board, eOpts) {\n                        this.setLoading(false);\n                    },\n                    scope: this\n            },\n            storeConfig:{\n                filters: this._filters\n            }\n        });\n        //this.setLoading(false);\n        this.down('#bodyContainer').add(this._cardBoard);\n    },\n\n    // addition of the help component is an afterthought...no support for it built into the SDK atm that I see, so this is a quick and dirty for now.\n    _buildHelpComponent:function (config) {\n        var host = this.context.getWorkspace()._ref.substr(0, this.context.getWorkspace()._ref.indexOf(\"/slm/\"));\n        return Ext.create('Ext.Component', Ext.apply({\n            renderTpl:'<a href=\"http://www.rallydev.com/help/story-board?basehost='+host+'\" title=\"Launch Help for Story Board App\" target=\"_blank\" ' +\n                'class=\"help\"><img id=\"appHeaderrighthelp\" class=\"appHelp\" src=\"'+host+'/apps/2.0p3/rui/resources/themes/images/default/help/icon_help.png\" title=\"Launch Help\" alt=\"Launch Help\" style=\"\"></a>'\n        }, config));\n    },\n\n    /**\n* @override\n*/\n    launch:function () {\n    \n        this.insert(0,this._buildHelpComponent({}));\n        this.down('#header').add([\n            {\n                xtype: 'rallyaddnew',\n                recordTypes: ['User Story', 'Defect', 'Defect Suite'],\n                cls:'add-new',\n                ignoredRequiredFields: ['Name'],\n                listeners: {\n                    recordadd: function(addNew, result) {\n                        this.down('#cardboard').addCard(result.record);\n                    },\n                    beforerecordadd: function(addNew, result) {\n                        result.record.set(\"Iteration\", this.down('#iterationcombobox').getValue());\n                    },\n                    scope: this\n                }\n            },\n            {\n    "],[1,"\n    launch:function() {    \n        var viewport = Ext.create('Ext.Viewport');\n\n        Rally.data.ModelFactory.getModel({\n        type: 'User Story',\n        success: function(userStoryModel) {\n        viewport.add({\n"],[0,"    "]],"start1":513,"start2":513,"length1":2771,"length2":231},{"diffs":[[0,"type"],[-1," "],[0,": '"],[-1,"fieldcontainer',\n                fieldLabel : 'Show',\n                defaultType: 'checkboxfield',\n                layout: 'hbox',\n                cls:'checkbox',\n                labelWidth: 40,\n                width: 300,\n                labelAlign: 'right',\n                items: [\n                    {\n                        boxLabel : 'User Stories',\n                        inputValue: 'User Story',\n                        checked : true,\n                        width: 78,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }, {\n                        boxLabel : 'Defects',\n                        inputValue: 'Defect',\n                        padding: \"0 10\",\n                        width: 56,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }, {\n                        boxLabel : 'Defect Suites',\n                        inputValue: 'Defect Suite',\n                        padding: \"0 20\",\n                        width: 84,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }\n                ]\n            },\n            {\n                xtype : 'fieldcontainer',\n                fieldLabel : 'Iteration',\n                pack: 'end',\n                labelAlign: 'right',\n                cls: 'iteration-picker',\n                items: [\n                    {\n                        xtype:'rallyiterationcombobox',\n                        itemId:'iterationcombobox',\n                        width: 300,\n                        listeners:{\n                            change:function(combo) {\n                                this._setFilter(combo.getRawValue());\n                            },\n                            ready:function(combo) {\n                                this._setFilter(combo.getRawValue());\n                    "],[1,"rallygrid',\n            model: userStoryModel,\n            columnCfgs: [\n                 'FormattedID',\n                 'Name',\n                 'Owner'\n             ]\n         });\n"],[0,"    "]],"start1":753,"start2":753,"length1":2520,"length2":194},{"diffs":[[0,"   });\n        }"],[-1,","],[0,"\n               "]],"start1":936,"start2":936,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"                    scope:this\n                        }\n                    }\n                ]\n            }\n        ]);\n    }"],[1,"});\n    }\n   "],[0,"\n});"]],"start1":957,"start2":957,"length1":136,"length2":21}]],"length":979,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349295286350,"patch":[[{"diffs":[[0,"ect'],\n\n    "],[-1,""],[0,""],[1," "],[0,"items:[\n    "]],"start1":217,"start2":217,"length1":24,"length2":25},{"diffs":[[0,"      xtype:"],[-1,"'contain"],[1," 'panel',\n            layout: 'anchor',\n            border: true,\n            fieldDefaults: {\n                labelWidth: 40\n            },\n            defaultType: 'textfield',\n            bodyPadding: 5,\n            items: [\n                {\n                    fieldLabel: 'Qu"],[0,"er"],[1,"y"],[0,"',\n         "]],"start1":254,"start2":254,"length1":34,"length2":308},{"diffs":[[0,"    "],[1,"       "],[1," "],[0,"itemId:"],[-1,"'header"],[1," 'queryField"],[0,"',\n "]],"start1":561,"start2":561,"length1":22,"length2":35},{"diffs":[[0,"    "],[1,"  "],[-1,"cls:'header'\n"],[1,"      anchor:'100%',\n                    width: 700,\n                    height: 100,\n                    xtype: 'textarea',\n                    value: '{\\n'+\n                            ' \"ObjectID\": {$gt:0},\\n'+\n                            ' \"__At\": \"current\"\\n'+\n                            '}'\n        "],[0,"    "]],"start1":603,"start2":603,"length1":21,"length2":316},{"diffs":[[0,"     },\n        "],[1,"      "],[-1,"{\n"],[1,"  {\n      "],[0,"            xtyp"]],"start1":918,"start2":918,"length1":34,"length2":48},{"diffs":[[0,"    "],[-1,"xtype:'container',\n            itemId:'bodyContainer',\n            height:'90%',\n"],[1,"  fieldLabel: 'Fields',\n                    itemId: 'fieldsField',\n                    anchor: '100%',\n                    width: 700,\n                    value: \"ObjectID, _ValidFrom, _UnformattedID, Name\"\n                },\n                {\n                    fieldLabel: 'Sort',\n                    itemId: 'sortField',\n                    anchor: '100%',\n                    width: 700,\n                    value: \"{'ObjectID' : -1, '_ValidFrom': 1}\"\n                },\n                {\n                    fieldLabel: 'Page Size',\n                    itemId: 'pageSizeField',\n                    anchor: '100%',\n       "],[0,"    "]],"start1":958,"start2":958,"length1":89,"length2":635},{"diffs":[[0,"    "],[1," "],[0,"width:"],[-1,"'100%',\n            autoScroll:true"],[1," 700,\n                    value: '10'\n                }\n            ],\n            \n            buttons: [\n                {\n                    xtype: 'rallybutton',\n                    text: 'Search',\n                    itemId: 'searchButton'\n                }\n            ]\n        },\n        {\n            xtype: 'panel',\n            itemId: 'gridHolder',\n            layout: 'fit',\n            height: 400"],[0,"\n   "]],"start1":1597,"start2":1597,"length1":49,"length2":426},{"diffs":[[0," launch:"],[1," "],[0,"function"]],"start1":2045,"start2":2045,"length1":16,"length2":17},{"diffs":[[0,"() {"],[1,"\n"],[0,"    "],[-1,"\n        var viewport = Ext.create('Ext.Viewport');\n\n        Rally.data.ModelFactory.getModel({\n        type: 'User Story',\n        success: function(userStoryModel) {\n        viewport.add({\n            xtype: 'rallygrid',\n            model: userStoryModel,\n            columnCfgs: [\n                 'FormattedID',\n                 'Name',\n                 'Owner'\n             ]\n         });\n        }\n        });\n    }"],[1,"    var button = this.down('#searchButton');\n        button.on('click', this.searchClicked, this);\n    },\n    \n    searchClicked: function(){\n        var queryField = this.down('#queryField');\n        var query = queryField.getValue();\n        var selectedFields = this.down('#fieldsField').getValue();\n        if(selectedFields){\n            if(selectedFields === 'true'){\n                selectedFields = true;\n            }\n            else{\n                selectedFields = selectedFields.split(', ');\n            }\n        }\n        \n        var sort = this.down('#sortField').getValue();\n        \n        var pageSize = this.down('#pageSizeField').getValue();\n        var parsedPageSize = parseInt(pageSize, 10);\n        // don't allow empty or 0 pagesize\n        pageSize = (parsedPageSize) ? parsedPageSize : 10;\n\n        var callback = Ext.bind(this.processSnapshots, this);\n        this.doSearch(query, selectedFields, sort, pageSize, callback);\n    },\n    \n    createSortMap: function(csvFields){\n        var fields = csvFields.split(', ');\n        var sortMap = {};\n        for(var field in fields){\n            if(fields.hasOwnProperty(field)){\n                sortMap[field] = 1;\n            }\n        }\n        \n        return sortMap;\n    },\n    \n    doSearch: function(query, fields, sort, pageSize, callback){\n        var transformStore = Ext.create('Rally.data.lookback.SnapshotStore', {\n            context: {\n                workspace: this.context.getWorkspace(),\n                project: this.context.getProject()\n            },\n            fetch: fields,\n            rawFind: query,\n            autoLoad: true,\n            listeners: {\n                scope: this,\n                load: this.processSnapshots\n            }\n        });\n    },\n    \n    processSnapshots: function(store, records){\n        var snapshotGrid = Ext.create('Rally.ui.grid.Grid', {\n            title: 'Snapshots',\n            store: store,\n            columnCfgs: [\n                {\n                    text: 'ObjectID',\n                    dataIndex: 'ObjectID'\n                },\n                {\n                    text: 'Name',\n                    dataIndex: 'Name'\n                },\n                {\n                    text: 'Project',\n                    dataIndex: 'Project'\n                },\n                {\n                    text: '_ValidFrom',\n                    dataIndex: '_ValidFrom'\n                },\n                {\n                    text: '_ValidTo',\n                    dataIndex: '_ValidTo'\n                }\n            ],\n            height: 400\n        });\n        \n        var gridHolder = this.down('#gridHolder');\n        gridHolder.removeAll(true);\n        gridHolder.add(snapshotGrid);"],[0,"\n   "],[1," }"],[0,"\n});"]],"start1":2062,"start2":2062,"length1":437,"length2":2746}]],"length":4809,"saved":false}
