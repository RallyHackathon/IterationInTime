{"ts":1349292842667,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n    launch: function() {\n        //Write app code here\n    }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":146}]],"length":146}
{"contributors":["troper@rallydev.com"],"silentsave":false,"ts":1349293094943,"patch":[[{"diffs":[[0,"ne('"],[-1,"CustomApp"],[1,"ScopeChange"],[0,"', {"]],"start1":8,"start2":8,"length1":17,"length2":19},{"diffs":[[0,"    "],[-1,"componentCls: 'app',\n\n    launch: function() {\n        //Write app code here"],[1,"layout: { type: 'vbox', align: 'stretch' },\n    appName:'Story Board',\n    componentCls: 'app',\n\n    _filters:undefined,\n    _types:['User Story'],\n\n    items:[\n        {\n            xtype:'container',\n            itemId:'header',\n            cls:'header'\n        },\n        {\n            xtype:'container',\n            itemId:'bodyContainer',\n            height:'90%',\n            width:'100%',\n            autoScroll:true\n        }\n    ],\n\n    _setFilter:function(iteration) {\n        this._filters = [\n            {\n                property:'Iteration.Name',\n                value:iteration\n            }\n        ];\n        this._buildBoard();\n    },\n\n    _setTypes:function(box, checked) {\n        if(this._types.indexOf(box.inputValue) >= 0 && !checked) {\n            this._types.splice(this._types.indexOf(box.inputValue), 1);\n        } else if((this._types.indexOf(box.inputValue) < 0) && checked) {\n            this._types.push(box.inputValue);\n        }\n        this._buildBoard();\n    },\n\n    _buildBoard:function() {\n        if(this._filters === undefined) {\n            return;\n        }\n        this.setLoading();\n        if(this._cardBoard !== undefined) {\n            this.down('#bodyContainer').remove(this._cardBoard);\n        }\n        this._cardBoard = Ext.widget('rallycardboard', {\n            types: this._types,\n            itemId:'cardboard',\n            name: 'cardboard',\n            attribute:'ScheduleState',\n            listeners: {\n                    load: function(board, eOpts) {\n                        this.setLoading(false);\n                    },\n                    scope: this\n            },\n            storeConfig:{\n                filters: this._filters\n            }\n        });\n        //this.setLoading(false);\n        this.down('#bodyContainer').add(this._cardBoard);\n    },\n\n    // addition of the help component is an afterthought...no support for it built into the SDK atm that I see, so this is a quick and dirty for now.\n    _buildHelpComponent:function (config) {\n        var host = this.context.getWorkspace()._ref.substr(0, this.context.getWorkspace()._ref.indexOf(\"/slm/\"));\n        return Ext.create('Ext.Component', Ext.apply({\n            renderTpl:'<a href=\"http://www.rallydev.com/help/story-board?basehost='+host+'\" title=\"Launch Help for Story Board App\" target=\"_blank\" ' +\n                'class=\"help\"><img id=\"appHeaderrighthelp\" class=\"appHelp\" src=\"'+host+'/apps/2.0p3/rui/resources/themes/images/default/help/icon_help.png\" title=\"Launch Help\" alt=\"Launch Help\" style=\"\"></a>'\n        }, config));\n    },\n\n    /**\n* @override\n*/\n    launch:function () {\n        this.insert(0,this._buildHelpComponent({}));\n        this.down('#header').add([\n            {\n                xtype: 'rallyaddnew',\n                recordTypes: ['User Story', 'Defect', 'Defect Suite'],\n                cls:'add-new',\n                ignoredRequiredFields: ['Name'],\n                listeners: {\n                    recordadd: function(addNew, result) {\n                        this.down('#cardboard').addCard(result.record);\n                    },\n                    beforerecordadd: function(addNew, result) {\n                        result.record.set(\"Iteration\", this.down('#iterationcombobox').getValue());\n                    },\n                    scope: this\n                }\n            },\n            {\n                xtype : 'fieldcontainer',\n                fieldLabel : 'Show',\n                defaultType: 'checkboxfield',\n                layout: 'hbox',\n                cls:'checkbox',\n                labelWidth: 40,\n                width: 300,\n                labelAlign: 'right',\n                items: [\n                    {\n                        boxLabel : 'User Stories',\n                        inputValue: 'User Story',\n                        checked : true,\n                        width: 78,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }, {\n                        boxLabel : 'Defects',\n                        inputValue: 'Defect',\n                        padding: \"0 10\",\n                        width: 56,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }, {\n                        boxLabel : 'Defect Suites',\n                        inputValue: 'Defect Suite',\n                        padding: \"0 20\",\n                        width: 84,\n                        listeners:{\n                            change:function(box, checked) {\n                                this.up('[appName=\"Story Board\"]')._setTypes(box, checked);\n                            }\n                        },\n                        scope: this\n                    }\n                ]\n            },\n            {\n                xtype : 'fieldcontainer',\n                fieldLabel : 'Iteration',\n                pack: 'end',\n                labelAlign: 'right',\n                cls: 'iteration-picker',\n                items: [\n                    {\n                        xtype:'rallyiterationcombobox',\n                        itemId:'iterationcombobox',\n                        width: 300,\n                        listeners:{\n                            change:function(combo) {\n                                this._setFilter(combo.getRawValue());\n                            },\n                            ready:function(combo) {\n                                this._setFilter(combo.getRawValue());\n                            },\n                            scope:this\n                        }\n                    }\n                ]\n            }\n        ]);"],[0,"\n   "]],"start1":57,"start2":57,"length1":84,"length2":6044}]],"length":6108,"saved":false}
