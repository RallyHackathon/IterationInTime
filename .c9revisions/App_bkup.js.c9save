{"ts":1349374948939,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('ScopeChange', {\n    extend: 'Rally.app.App',\n    layout: { type: 'vbox', align: 'stretch' },\n    appName:'ScopeChanges',\n    componentCls: 'app',\n\n    launch: function() {\n        var me = this;\n        Rally.data.ModelFactory.getModel({\n                type: 'UserStory',\n                success: me.installComponents,\n                scope: this\n            })\n    },\n\n    installComponents: function(model) {\n        this.grid = this.add({\n            xtype: 'rallygrid',\n            model: model,\n            columnCfgs: [\n                'FormattedID',\n                'Name',\n                'Owner'\n            ],\n            listeners: {\n                load:Ext.bind(this.doSearch, this)\n            }\n        });\n    },\n\n    doSearch: function(){\n        console.log(this.context.getProject());\n        this.transformStore = Ext.create('Rally.data.lookback.SnapshotStore', {\n            context: {\n                workspace: this.context.getWorkspace(),\n                project: this.context.getProject(),\n                projectScopeUp: false,\n                projectScopeDown: true\n            },\n            filters:[\n                {property:\"__At\",\n                value: \"2012-08-16\"},\n                {property:\"_ProjectHierarchy\",\n                value: this.context.getProject().ObjectID},\n                {property:\"_TypeHierarchy\",\n                operator:'in',\n                value:[-51038]},\n                {property:\"ScheduleState\",\n                operator:'<',\n                value:\"Accepted\"}\n            ],\n            autoLoad: true,\n            listeners: {\n                scope: this,\n                load: this.processSnapshots\n            }\n        });\n    },\n\n    processSnapshots: function() {\n        this.oidArray = [];\n        this.transformStore.each(Ext.bind(function(record){\n                console.log(\"Processing record: \" + record.get(\"ObjectID\"));\n                this.oidArray = Ext.Array.push(this.oidArray, record.get(\"ObjectID\"));\n            }, this));\n        console.log(this.oidArray);\n        this.grid.getStore().filterBy(this.filterFunction, this);\n    },\n\n    filterFunction: function(record) {\n        console.log(record.get(\"ObjectID\"));\n        return Ext.Array.contains(this.oidArray, record.get(\"ObjectID\"));\n    }\n\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":2301}]],"length":2301}
